<?php declare( strict_types = 1 );

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */
namespace Soderlind\Plugin\Bypass;

class Settings {
	private $bypass_force_login_options;

	public function __construct() {
		add_action( 'admin_menu', [ $this, 'bypass_force_login_add_plugin_page' ] );
		add_action( 'admin_init', [ $this, 'bypass_force_login_page_init' ] );
	}

	public function bypass_force_login_add_plugin_page() {
		add_options_page(
			'Bypass Force Login', // page_title
			'Bypass Force Login', // menu_title
			'manage_options', // capability
			'bypass-force-login', // menu_slug
			[ $this, 'bypass_force_login_create_admin_page' ] // function
		);
	}

	public function bypass_force_login_create_admin_page() {
		$this->bypass_force_login_options = get_option( 'bypass_force_login_option_name' ); ?>

		<div class="wrap">
			<h2>Bypass Force Login</h2>
			<p></p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'bypass_force_login_option_group' );
					do_settings_sections( 'bypass-force-login-admin' );
					submit_button();
				?>
			</form>
		</div>
		<?php
	}

	public function bypass_force_login_page_init() {
		register_setting(
			'bypass_force_login_option_group', // option_group
			'bypass_force_login_option_name', // option_name
			[ $this, 'bypass_force_login_sanitize' ] // sanitize_callback
		);

		add_settings_section(
			'bypass_force_login_setting_section', // id
			'Settings', // title
			[ $this, 'bypass_force_login_section_info' ], // callback
			'bypass-force-login-admin' // page
		);

		/**
		 * @param string $id,
         * @param string $title,
         * @param string $callback,
         * @param string $page,
         * @param string $section = 'default',
         * @param array $args
		 */
		add_settings_field(
			'urls',
			__( 'URL', 'bypass-wp-force-login' ),
			[ $this, 'urls_callback' ],
			'bypass-force-login-admin',
			'bypass_force_login_setting_section',
			[
				'label_for' => 'urls',
				'description' => __( 'Add the exact URL, one per line, that you want to bypass', 'bypass-wp-force-login' ),
				'placeholder' => home_url( '/page-name/'),
			]
		);

		add_settings_field(
			'patterns',
			__( 'Pattern', 'bypass-wp-force-login' ),
			[ $this, 'patterns_callback' ],
			'bypass-force-login-admin',
			'bypass_force_login_setting_section',
			[
				'label_for' => 'patterns',
				'description' => __( 'Add the <a href="https://tutorials.supunkavinda.blog/php/regex-syntax">regexp pattern</a>, one per line, for the URL that you want to bypass', 'bypass-wp-force-login' ),
				'placeholder' => '/string/',
			]
		);

		add_settings_field(
			'querystringparameters',
			__( 'Query String Parameter', 'bypass-wp-force-login' ),
			[ $this, 'querystringparameters_callback' ],
			'bypass-force-login-admin',
			'bypass_force_login_setting_section',
			[
				'label_for' => 'querystringparameters',
				'description' => sprintf( __( 'Bypass Page URL based on, one per line, the Query String Parameter, Eg: <b>parameter</b> as in %s?parameter=xyz', 'bypass-wp-force-login' ), home_url() ),
				'placeholder' => 'parameter',
			]
		);
	}

	public function bypass_force_login_sanitize( $input ) {
		$sanitary_values = [];
		if ( isset( $input['urls'] ) ) {
			$sanitary_values['urls'] = esc_textarea( $input['urls'] );
		}

		if ( isset( $input['patterns'] ) ) {
			$sanitary_values['patterns'] = esc_textarea( $input['patterns'] );
		}

		if ( isset( $input['querystringparameters'] ) ) {
			$sanitary_values['querystringparameters'] = esc_textarea( $input['querystringparameters'] );
		}

		return $sanitary_values;
	}

	public function bypass_force_login_section_info() {
		// echo 'HEPP';
	}

	public function urls_callback( $args) {
		printf(
			'<textarea class="large-text" rows="5" name="bypass_force_login_option_name[urls]" id="urls" placeholder="%s">%s</textarea>',
			isset( $args[ 'placeholder' ] ) ? $args[ 'placeholder' ] : '',
			isset( $this->bypass_force_login_options['urls'] ) ? esc_attr( $this->bypass_force_login_options['urls'] ) : ''
		);
		if ( isset( $args[ 'description' ] ) ) {
			printf( '<p class="description">%s</p>', $args[ 'description' ] );
		}
	}

	public function patterns_callback( $args) {
		printf(
			'<textarea class="large-text" rows="5" name="bypass_force_login_option_name[patterns]" id="patterns" placeholder="%s">%s</textarea>',
			isset( $args[ 'placeholder' ] ) ? $args[ 'placeholder' ] : '',
			isset( $this->bypass_force_login_options['patterns'] ) ? esc_attr( $this->bypass_force_login_options['patterns'] ) : ''
		);
		if ( isset( $args[ 'description' ] ) ) {
			printf( '<p class="description">%s</p>', $args[ 'description' ] );
		}
	}

	public function querystringparameters_callback( $args) {
		printf(
			'<textarea class="large-text" rows="5" name="bypass_force_login_option_name[querystringparameters]" id="querystringparameters" placeholder="%s">%s</textarea>',
			isset( $args[ 'placeholder' ] ) ? $args[ 'placeholder' ] : '',
			isset( $this->bypass_force_login_options['querystringparameters'] ) ? esc_attr( $this->bypass_force_login_options['querystringparameters'] ) : ''
		);
		if ( isset( $args[ 'description' ] ) ) {
			printf( '<p class="description">%s</p>', $args[ 'description' ] );
		}
	}

}

